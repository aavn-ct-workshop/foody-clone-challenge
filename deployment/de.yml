apiVersion: v1
kind: Namespace
metadata:
  name: foody-clone
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress
  namespace: foody-clone
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress
subjects:
- kind: ServiceAccount
  name: traefik-ingress
  namespace: foody-clone
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:23 +0000
  labels:
    app.kubernetes.io/name: driver-service
    app.kubernetes.io/version: 1.0.0
  name: driver-service
  namespace: foody-clone
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: driver-service
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: agent
    app.kubernetes.io/name: jaeger
  name: jaeger-agent
  namespace: foody-clone
spec:
  clusterIP: None
  ports:
  - name: agent-zipkin-thrift
    port: 5775
    protocol: UDP
    targetPort: 5775
  - name: agent-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-configs
    port: 5778
    protocol: TCP
    targetPort: 5778
  selector:
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/name: jaeger
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/name: jaeger
  name: jaeger-collector
  namespace: foody-clone
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: 14267
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/name: jaeger
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/name: jaeger
  name: jaeger-query
  namespace: foody-clone
spec:
  ports:
  - name: query-http
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/name: jaeger
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: foody-clone
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:37 +0000
  labels:
    app.kubernetes.io/name: merchant-service
    app.kubernetes.io/version: 1.0.0
  name: merchant-service
  namespace: foody-clone
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: merchant-service
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:48 +0000
  labels:
    app.kubernetes.io/name: order-service
    app.kubernetes.io/version: 1.0.0
  name: order-service
  namespace: foody-clone
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: order-service
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:59 +0000
  labels:
    app.kubernetes.io/name: payment-service
    app.kubernetes.io/version: 1.0.0
  name: payment-service
  namespace: foody-clone
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: payment-service
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
  namespace: foody-clone
spec:
  externalTrafficPolicy: Local
  ports:
  - name: app-services
    port: 80
    protocol: TCP
  - name: dashboard
    port: 8080
    protocol: TCP
  selector:
    k8s-app: traefik-ingress-lb
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: foody-clone
spec:
  ports:
  - name: web
    port: 80
    targetPort: 8080
  selector:
    k8s-app: traefik-ingress-lb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: zipkin
    app.kubernetes.io/name: jaeger
  name: zipkin
  namespace: foody-clone
spec:
  clusterIP: None
  ports:
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/name: jaeger
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: app-fooday
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:23 +0000
  labels:
    app.kubernetes.io/name: driver-service
    app.kubernetes.io/version: 1.0.0
  name: driver-service
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: driver-service
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:23 +0000
      labels:
        app.kubernetes.io/name: driver-service
        app.kubernetes.io/version: 1.0.0
      namespace: foody-clone
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: tttai/driver-service:1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: driver-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/name: jaeger
  name: jaeger
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "16686"
        prometheus.io/scrape: "true"
      labels:
        app: jaeger
        app.kubernetes.io/component: all-in-one
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - args:
        - --query.base-path=/tracing
        env:
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        image: jaegertracing/all-in-one
        name: jaeger
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        - containerPort: 16686
          protocol: TCP
        - containerPort: 9411
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - env:
        - name: KEYCLOAK_USER
          value: admin
        - name: KEYCLOAK_PASSWORD
          value: admin
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        image: quay.io/keycloak/keycloak:13.0.1
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:37 +0000
  labels:
    app.kubernetes.io/name: merchant-service
    app.kubernetes.io/version: 1.0.0
  name: merchant-service
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: merchant-service
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:37 +0000
      labels:
        app.kubernetes.io/name: merchant-service
        app.kubernetes.io/version: 1.0.0
      namespace: foody-clone
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: tttai/merchant-service:1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: merchant-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:48 +0000
  labels:
    app.kubernetes.io/name: order-service
    app.kubernetes.io/version: 1.0.0
  name: order-service
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: order-service
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:48 +0000
      labels:
        app.kubernetes.io/name: order-service
        app.kubernetes.io/version: 1.0.0
      namespace: foody-clone
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: tttai/order-service:1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: order-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:59 +0000
  labels:
    app.kubernetes.io/name: payment-service
    app.kubernetes.io/version: 1.0.0
  name: payment-service
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: payment-service
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2021-07-06 - 08:34:59 +0000
      labels:
        app.kubernetes.io/name: payment-service
        app.kubernetes.io/version: 1.0.0
      namespace: foody-clone
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: tttai/payment-service:1.0.0
        imagePullPolicy: IfNotPresent
        name: payment-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: traefik-ingress-lb
  name: traefik-ingress
  namespace: foody-clone
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      containers:
      - args:
        - --api
        - --kubernetes
        - --logLevel=INFO
        image: traefik:v1.7.30-alpine
        name: traefik-ingress-lb
        ports:
        - containerPort: 80
          name: app-services
        - containerPort: 8080
          name: dashboard
        resources: {}
      serviceAccountName: traefik-ingress
      terminationGracePeriodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app: app-fooday
  template:
    metadata:
      labels:
        app: app-fooday
    spec:
      containers:
      - image: fooday:latest
        imagePullPolicy: Never
        name: fooday
        ports:
        - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: foody-clone-ingress
  namespace: foody-clone
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: order-service
            port:
              number: 8080
        path: /api/orders
        pathType: Prefix
      - backend:
          service:
            name: payment-service
            port:
              number: 8080
        path: /api/wallets
        pathType: Prefix
      - backend:
          service:
            name: merchant-service
            port:
              number: 8080
        path: /api/merchants
        pathType: Prefix
      - backend:
          service:
            name: merchant-service
            port:
              number: 8080
        path: /api/foods
        pathType: Prefix
      - backend:
          service:
            name: driver-service
            port:
              number: 8080
        path: /api/drivers
        pathType: Prefix
      - backend:
          service:
            name: driver-service
            port:
              number: 8080
        path: /api/shipping
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-web-ui
  namespace: foody-clone
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: jaeger-query
            port:
              name: query-http
        path: /tracing
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: foody-clone
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: keycloak
            port:
              number: 8080
        path: /auth
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
  name: traefik-web-ui
  namespace: foody-clone
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: traefik-web-ui
            port:
              name: web
        path: /gateway
        pathType: Prefix
